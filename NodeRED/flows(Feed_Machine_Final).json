[
    {
        "id": "1ba2e068fd0c5aec",
        "type": "tab",
        "label": "Common",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1549c8010dfcd079",
        "type": "tab",
        "label": "Feed Machine",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cdb93888c6c9e46e",
        "type": "group",
        "z": "1549c8010dfcd079",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7c987cff0bd2b48a",
            "780e82667c792e6a",
            "f58bde3cb687ae43",
            "4daa84cf78f5631a",
            "6baeffa7181b308e",
            "a68a945b224db93b",
            "2b2490ede14a88b6"
        ],
        "x": 114,
        "y": 99,
        "w": 1112,
        "h": 169.5
    },
    {
        "id": "ad681e01368c09de",
        "type": "group",
        "z": "1549c8010dfcd079",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b772da78f89859ae",
            "797d21519be301c8",
            "f37f3249333dd089",
            "1f54bb09af679039",
            "fec65c373266c292",
            "347f9d3db021f1e9",
            "fd356da56f91da45"
        ],
        "x": 114,
        "y": 639,
        "w": 1112,
        "h": 169.5
    },
    {
        "id": "4abf1aa1b4f47b11",
        "type": "group",
        "z": "1ba2e068fd0c5aec",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5f087f9cfd4909a1",
            "7ffafe9cc6e24b59",
            "38a86d0f8c2b5686",
            "7807c09184d040fd",
            "af397ef4069822d7",
            "b7c1bd9db1cae013"
        ],
        "x": 14,
        "y": 19,
        "w": 1122,
        "h": 368
    },
    {
        "id": "2a339e4b7aa3952f",
        "type": "group",
        "z": "1ba2e068fd0c5aec",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ed5f06521efed0a",
            "aeaa5d2cae5effcc",
            "88ede0b57d45dae0",
            "2766645e8121cecf",
            "82ac2527df67ac61",
            "48209ecd686aaf9e"
        ],
        "x": 14,
        "y": 399,
        "w": 712,
        "h": 162
    },
    {
        "id": "11d274798ed92cc8",
        "type": "group",
        "z": "1ba2e068fd0c5aec",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "39ee1755e5076075",
            "20944e26035b854c",
            "f771ee37c637c4ea",
            "06cdc22acc081cab",
            "7934111e26f91c12",
            "4f36e1add8d10571",
            "1061c41123d8e3fd",
            "143f8dd012e1cc58"
        ],
        "x": 14,
        "y": 579,
        "w": 932,
        "h": 122
    },
    {
        "id": "2b0735593b128abb",
        "type": "group",
        "z": "1549c8010dfcd079",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d4d8585c441ea3ef",
            "d3f14901a0a91945",
            "c322acb6f61a5265",
            "f9115deed0d843b5",
            "720e9f55be45987f",
            "426426a761d066c7",
            "2dcd8cb535e0287c",
            "d6abec530ab00df8",
            "8639ab55e12d34ef",
            "d674624da83f8d1f",
            "18b4e1530f9067ff",
            "1a37301f9636e3b7"
        ],
        "x": 114,
        "y": 879,
        "w": 1292,
        "h": 422
    },
    {
        "id": "af397ef4069822d7",
        "type": "group",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b7318a17421ec662",
            "dcf1d8369f462507",
            "7e0260c5ff127350",
            "ee277d18ca8cd230"
        ],
        "x": 194,
        "y": 99,
        "w": 592,
        "h": 122
    },
    {
        "id": "b7c1bd9db1cae013",
        "type": "group",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eebe49fbe55b3985",
            "f3f053c0419fd196",
            "eb0db38c5fe19b9e",
            "2500b1b7030f0399"
        ],
        "x": 194,
        "y": 239,
        "w": 602,
        "h": 122
    },
    {
        "id": "c5474316e98e3fc5",
        "type": "group",
        "z": "1549c8010dfcd079",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d1e5f77e8d991d9d",
            "9eab36c8e74c3859",
            "692dc02954135cc2",
            "e311bd515efb47e7",
            "7c66e1d67de8b5c0",
            "1d4272eca51c0548"
        ],
        "x": 114,
        "y": 319,
        "w": 952,
        "h": 262
    },
    {
        "id": "aa3b4d01a115c2b9",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "66f518c258411985",
        "type": "ui_tab",
        "name": "Servo-demo",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "69af02855cb3263e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3eb6b03edfa68daf",
        "type": "ui_group",
        "name": "ㅇ",
        "tab": "66f518c258411985",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "506e7cfb07e624f2",
        "type": "mqtt-broker",
        "name": "Platform Server",
        "broker": "petificationblue.ddns.net",
        "port": "8883",
        "tls": "5e29734fa30d3011",
        "clientid": "admin",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4d627c9a8d4f522b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "petificationpurple.ddns.net",
        "port": "8883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1d468380d31a4f6a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "petificationpurple.ddns.net",
        "port": "8883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5e29734fa30d3011",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "cfc29aa6332ee951",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "90fcd8de4a4abf8c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "8883",
        "tls": "cfc29aa6332ee951",
        "clientid": "unused",
        "autoConnect": false,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "1",
        "closeRetain": "true",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "1",
        "willRetain": "true",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5f087f9cfd4909a1",
        "type": "inject",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "b7318a17421ec662"
            ]
        ]
    },
    {
        "id": "eebe49fbe55b3985",
        "type": "http request",
        "z": "1ba2e068fd0c5aec",
        "g": "b7c1bd9db1cae013",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "cfc29aa6332ee951",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 290,
        "y": 320,
        "wires": [
            [
                "f3f053c0419fd196"
            ]
        ]
    },
    {
        "id": "f3f053c0419fd196",
        "type": "function",
        "z": "1ba2e068fd0c5aec",
        "g": "b7c1bd9db1cae013",
        "name": "SaveCid",
        "func": "const settings = global.get('settings');\nsettings.mqttCid = JSON.parse(msg.payload).uuid;\nglobal.set('settings', settings);\nmsg.payload = settings;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "eb0db38c5fe19b9e"
            ]
        ]
    },
    {
        "id": "7ffafe9cc6e24b59",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "name": "Load Local Settings",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ed5f06521efed0a",
        "type": "debug",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "broker",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 480,
        "wires": []
    },
    {
        "id": "aeaa5d2cae5effcc",
        "type": "function",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "ConnectMQTT",
        "func": "msg.action = \"connect\";\n\nconst CID = global.get('settings').mqttCid;\nconst USERNAME = global.get('settings').mqttUname;\n\nconst setting = {\n    \n    // Basic host setting\n    \"broker\": global.get('mqtt-broker'),\n    \"port\": global.get('mqtt-port'),\n    \"clientid\": CID,\n    \n    // Boolean setting\n    \"force\": true,\n    \n    // Birth setting\n    \"birthTopic\": `users/${USERNAME}/${CID}/conn`,\n    \"birthQos\": \"1\",\n    \"birthRetain\": \"true\",\n    \"birthPayload\": `Device connected`,\n    \n    // Close setting\n    \"closeTopic\": `users/${USERNAME}/${CID}/disconn`,\n    \"closeQos\": \"1\",\n    \"closeRetain\": \"true\",\n    \"closePayload\": `Device disconnected`,\n\n    // Will setting\n    \"willTopic\": `users/${USERNAME}/${CID}/error`,\n    \"willQos\": \"1\",\n    \"willRetain\": \"true\",\n    \"willPayload\": `Device disconnected unexpectedly`,\n};\n\nmsg.broker = setting;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 480,
        "wires": [
            [
                "4ed5f06521efed0a",
                "88ede0b57d45dae0"
            ]
        ]
    },
    {
        "id": "88ede0b57d45dae0",
        "type": "mqtt out",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "MQTTSetup",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "90fcd8de4a4abf8c",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "2766645e8121cecf",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "Setup MQTT",
        "info": "",
        "x": 110,
        "y": 440,
        "wires": []
    },
    {
        "id": "39ee1755e5076075",
        "type": "mqtt in",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "90fcd8de4a4abf8c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 590,
        "y": 660,
        "wires": [
            [
                "f771ee37c637c4ea",
                "143f8dd012e1cc58"
            ]
        ]
    },
    {
        "id": "20944e26035b854c",
        "type": "function",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "DynSubscribe",
        "func": "msg.action = \"subscribe\";\nmsg.topic = `users/${global.get('settings').mqttUname}/${global.get('settings').mqttCid}/action/#`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 660,
        "wires": [
            [
                "39ee1755e5076075"
            ]
        ]
    },
    {
        "id": "f771ee37c637c4ea",
        "type": "link out",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "Action MSG Event Out",
        "mode": "link",
        "links": [
            "978d79f8a54ee091",
            "d3f14901a0a91945"
        ],
        "x": 695,
        "y": 660,
        "wires": []
    },
    {
        "id": "06cdc22acc081cab",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "Action MSG Event Out",
        "info": "",
        "x": 820,
        "y": 660,
        "wires": []
    },
    {
        "id": "7934111e26f91c12",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "Subscribe Action",
        "info": "",
        "x": 120,
        "y": 620,
        "wires": []
    },
    {
        "id": "b7318a17421ec662",
        "type": "file in",
        "z": "1ba2e068fd0c5aec",
        "g": "af397ef4069822d7",
        "name": "",
        "filename": ".node-red/settings.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "dcf1d8369f462507"
            ]
        ]
    },
    {
        "id": "dcf1d8369f462507",
        "type": "json",
        "z": "1ba2e068fd0c5aec",
        "g": "af397ef4069822d7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "7e0260c5ff127350"
            ]
        ]
    },
    {
        "id": "7e0260c5ff127350",
        "type": "function",
        "z": "1ba2e068fd0c5aec",
        "g": "af397ef4069822d7",
        "name": "LoadSettings",
        "func": "global.set('settings', msg.payload);\n\nif (!global.get('settings').mqttCid) {\n    // && global.get('http-host')\n    // && global.get('http-port')\n    // && global.get('settings').deviceName\n    // && global.get('settings').deviceType) {\n    \n    msg.method = \"POST\";\n    msg.url = `https://${global.get('http-host')}:${global.get('http-port')}/device/${encodeURIComponent(global.get('settings').deviceName)}/${global.get('settings').deviceType}`;\n    msg.headers = {\n        authorization: \"Bearer \" + global.get('settings').httpToken,\n    };\n\n    return [null, msg];\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "38a86d0f8c2b5686"
            ],
            [
                "eebe49fbe55b3985"
            ]
        ]
    },
    {
        "id": "eb0db38c5fe19b9e",
        "type": "file",
        "z": "1ba2e068fd0c5aec",
        "g": "b7c1bd9db1cae013",
        "name": "",
        "filename": ".node-red/settings.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 320,
        "wires": [
            [
                "38a86d0f8c2b5686"
            ]
        ]
    },
    {
        "id": "ee277d18ca8cd230",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "af397ef4069822d7",
        "name": "LoadSettings",
        "info": "",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "2500b1b7030f0399",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "b7c1bd9db1cae013",
        "name": "RegisterCID",
        "info": "",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "38a86d0f8c2b5686",
        "type": "link out",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "name": "Setting Loaded Event Out",
        "mode": "link",
        "links": [
            "82ac2527df67ac61",
            "4f36e1add8d10571"
        ],
        "x": 865,
        "y": 120,
        "wires": []
    },
    {
        "id": "7807c09184d040fd",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "4abf1aa1b4f47b11",
        "name": "Setting Loaded Event Out",
        "info": "",
        "x": 1000,
        "y": 120,
        "wires": []
    },
    {
        "id": "82ac2527df67ac61",
        "type": "link in",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "Setting Loaded Event Listener",
        "links": [
            "38a86d0f8c2b5686"
        ],
        "x": 295,
        "y": 480,
        "wires": [
            [
                "aeaa5d2cae5effcc"
            ]
        ]
    },
    {
        "id": "48209ecd686aaf9e",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "2a339e4b7aa3952f",
        "name": "Setting Loaded Event Listener",
        "info": "",
        "x": 160,
        "y": 480,
        "wires": []
    },
    {
        "id": "4f36e1add8d10571",
        "type": "link in",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "Setting Loaded Event Listener",
        "links": [
            "38a86d0f8c2b5686"
        ],
        "x": 295,
        "y": 660,
        "wires": [
            [
                "20944e26035b854c"
            ]
        ]
    },
    {
        "id": "1061c41123d8e3fd",
        "type": "comment",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "Setting Loaded Event Listener",
        "info": "",
        "x": 160,
        "y": 660,
        "wires": []
    },
    {
        "id": "143f8dd012e1cc58",
        "type": "debug",
        "z": "1ba2e068fd0c5aec",
        "g": "11d274798ed92cc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 620,
        "wires": []
    },
    {
        "id": "7c987cff0bd2b48a",
        "type": "exec",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "f58bde3cb687ae43"
            ],
            [],
            []
        ]
    },
    {
        "id": "780e82667c792e6a",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "",
        "func": "// var count = flow.get('count') || 0;\n// flow.set('count', count);\nvar newMsg = {payload: \"python -u /home/pi/Dashboard/user/Overload/hx711py/container.py\"};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "7c987cff0bd2b48a"
            ]
        ]
    },
    {
        "id": "f58bde3cb687ae43",
        "type": "smooth",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "2",
        "round": "0",
        "mult": "single",
        "reduce": false,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "e311bd515efb47e7"
            ]
        ]
    },
    {
        "id": "4daa84cf78f5631a",
        "type": "mqtt out",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "506e7cfb07e624f2",
        "x": 1150,
        "y": 220,
        "wires": []
    },
    {
        "id": "6baeffa7181b308e",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "Auto Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "780e82667c792e6a"
            ]
        ]
    },
    {
        "id": "b772da78f89859ae",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "",
        "func": "// var count = flow.get('count') || 0;\n// flow.set('count', count);\nvar newMsg = {payload: \"python -u /home/pi/Dashboard/user/Overload/hx711py/bowl.py\"};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 760,
        "wires": [
            [
                "797d21519be301c8"
            ]
        ]
    },
    {
        "id": "797d21519be301c8",
        "type": "exec",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 760,
        "wires": [
            [
                "f37f3249333dd089"
            ],
            [],
            []
        ]
    },
    {
        "id": "f37f3249333dd089",
        "type": "smooth",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "2",
        "round": "0",
        "mult": "single",
        "reduce": false,
        "x": 680,
        "y": 760,
        "wires": [
            [
                "c322acb6f61a5265",
                "692dc02954135cc2"
            ]
        ]
    },
    {
        "id": "1f54bb09af679039",
        "type": "mqtt out",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "506e7cfb07e624f2",
        "x": 1150,
        "y": 760,
        "wires": []
    },
    {
        "id": "fec65c373266c292",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "Auto Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 230,
        "y": 760,
        "wires": [
            [
                "b772da78f89859ae"
            ]
        ]
    },
    {
        "id": "a68a945b224db93b",
        "type": "comment",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "Feed Container",
        "info": "",
        "x": 220,
        "y": 140,
        "wires": []
    },
    {
        "id": "347f9d3db021f1e9",
        "type": "comment",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "Feed Bowl",
        "info": "",
        "x": 200,
        "y": 680,
        "wires": []
    },
    {
        "id": "fd356da56f91da45",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "ad681e01368c09de",
        "name": "PrepareMQTTMSG",
        "func": "global.set(\"scale_bowl\", msg.payload);\nconst uname = flow.get('mqtt-uname');\nconst cid = flow.get('mqtt-cid');\n\nmsg.topic = `users/${global.get('settings').mqttUname}/${global.get('settings').mqttCid}/scale/bowl`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 760,
        "wires": [
            [
                "1f54bb09af679039"
            ]
        ]
    },
    {
        "id": "2b2490ede14a88b6",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "cdb93888c6c9e46e",
        "name": "PrepareMQTTMSG",
        "func": "const uname = flow.get('mqtt-uname');\nconst cid = flow.get('mqtt-cid');\n\nmsg.topic = `users/${global.get('settings').mqttUname}/${global.get('settings').mqttCid}/scale/container`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 220,
        "wires": [
            [
                "4daa84cf78f5631a"
            ]
        ]
    },
    {
        "id": "d4d8585c441ea3ef",
        "type": "pi-gpiod out",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "host": "localhost",
        "port": 8888,
        "pin": "4",
        "set": "",
        "level": "0",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "80",
        "x": 1320,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d3f14901a0a91945",
        "type": "link in",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "links": [
            "f771ee37c637c4ea"
        ],
        "x": 245,
        "y": 1200,
        "wires": [
            [
                "f9115deed0d843b5"
            ]
        ]
    },
    {
        "id": "c322acb6f61a5265",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "set simple topic - bowl",
        "func": "msg.topic = \"scale_bowl\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "2dcd8cb535e0287c"
            ]
        ]
    },
    {
        "id": "f9115deed0d843b5",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "set simple topic - feed",
        "func": "msg.topic = \"action_feed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "2dcd8cb535e0287c"
            ]
        ]
    },
    {
        "id": "9ef61433d7390af8",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "18",
        "payloadType": "num",
        "x": 1410,
        "y": 180,
        "wires": [
            [
                "a49a4dbb5d61698f"
            ]
        ]
    },
    {
        "id": "5d938c80d7f831a1",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "13",
        "payloadType": "num",
        "x": 1410,
        "y": 140,
        "wires": [
            [
                "a49a4dbb5d61698f"
            ]
        ]
    },
    {
        "id": "a49a4dbb5d61698f",
        "type": "pi-gpiod out",
        "z": "1549c8010dfcd079",
        "name": "",
        "host": "localhost",
        "port": 8888,
        "pin": "4",
        "set": "",
        "level": "0",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "80",
        "x": 1620,
        "y": 140,
        "wires": []
    },
    {
        "id": "720e9f55be45987f",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 210,
        "y": 1260,
        "wires": [
            [
                "f9115deed0d843b5"
            ]
        ]
    },
    {
        "id": "426426a761d066c7",
        "type": "debug",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2dcd8cb535e0287c",
        "type": "join-wait",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "paths": "[\"scale_bowl\",\"action_feed\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "topic",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "1",
        "timeoutUnits": "86400000",
        "exactOrder": "true",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "d6abec530ab00df8"
            ],
            []
        ]
    },
    {
        "id": "d6abec530ab00df8",
        "type": "while-loop",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "Loop",
        "condi": "msg.topic.scale_bowl < msg.topic.action_feed",
        "limit": true,
        "limitTime": "500",
        "time": "wld6abec530ab00df8",
        "timeType": "msg",
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "8639ab55e12d34ef"
            ],
            [
                "d674624da83f8d1f",
                "18b4e1530f9067ff"
            ]
        ]
    },
    {
        "id": "8639ab55e12d34ef",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "False = Close",
        "func": "msg.payload = 18;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1020,
        "wires": [
            [
                "d4d8585c441ea3ef"
            ]
        ]
    },
    {
        "id": "d674624da83f8d1f",
        "type": "change",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic.scale_bowl",
                "pt": "msg",
                "to": "scale_bowl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1220,
        "wires": [
            [
                "426426a761d066c7",
                "d6abec530ab00df8"
            ]
        ]
    },
    {
        "id": "18b4e1530f9067ff",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "True = Open",
        "func": "msg.payload=13;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1060,
        "wires": [
            [
                "d4d8585c441ea3ef"
            ]
        ]
    },
    {
        "id": "1a37301f9636e3b7",
        "type": "comment",
        "z": "1549c8010dfcd079",
        "g": "2b0735593b128abb",
        "name": "Automatic Scheduled Feeding",
        "info": "",
        "x": 260,
        "y": 920,
        "wires": []
    },
    {
        "id": "d1e5f77e8d991d9d",
        "type": "comment",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "If there is no food in container",
        "info": "",
        "x": 260,
        "y": 360,
        "wires": []
    },
    {
        "id": "9eab36c8e74c3859",
        "type": "join-wait",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "",
        "paths": "[\"container\", \"bowl\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "topic",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "10",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 560,
        "y": 480,
        "wires": [
            [
                "7c66e1d67de8b5c0"
            ],
            []
        ]
    },
    {
        "id": "692dc02954135cc2",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "",
        "func": "msg.topic = \"bowl\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "9eab36c8e74c3859"
            ]
        ]
    },
    {
        "id": "e311bd515efb47e7",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "",
        "func": "msg.topic = \"container\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "9eab36c8e74c3859"
            ]
        ]
    },
    {
        "id": "7c66e1d67de8b5c0",
        "type": "function",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "Error Detecting",
        "func": "var bowl = msg.topic.bowl;\nvar container = msg.topic.container;\n\nif ((bowl + container) <= 10) {\n    \n    msg.payload = \"There is not enough food.\";\n    msg.topic = `users/${global.get('settings').mqttUname}/${global.get('settings').mqttCid}/error`;\n    \n    return [msg,null,null];\n}\n\nelse {\n    \n    var msg_bowl = {\n        payload: bowl\n    };\n    \n    var msg_container = {\n        payload: container\n    };\n    \n    return [null, msg_bowl, msg_container];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 480,
        "wires": [
            [
                "1d4272eca51c0548"
            ],
            [
                "fd356da56f91da45"
            ],
            [
                "2b2490ede14a88b6"
            ]
        ]
    },
    {
        "id": "1d4272eca51c0548",
        "type": "mqtt out",
        "z": "1549c8010dfcd079",
        "g": "c5474316e98e3fc5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "506e7cfb07e624f2",
        "x": 990,
        "y": 480,
        "wires": []
    }
]