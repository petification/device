[
    {
        "id": "1549c8010dfcd079",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfc29aa6332ee951",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "90fcd8de4a4abf8c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "8883",
        "tls": "cfc29aa6332ee951",
        "clientid": "unused",
        "autoConnect": false,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "aloha",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "aloha baby",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "1",
        "closeRetain": "true",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "1",
        "willRetain": "true",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "44c53352041184d0",
        "type": "inject",
        "z": "1549c8010dfcd079",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "04a4117bab063133"
            ]
        ]
    },
    {
        "id": "9056e8f911ae5bf5",
        "type": "http request",
        "z": "1549c8010dfcd079",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "cfc29aa6332ee951",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "88f52463bfa7440d"
            ]
        ]
    },
    {
        "id": "9bd27b21e3bcfa15",
        "type": "debug",
        "z": "1549c8010dfcd079",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "broker",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 200,
        "wires": []
    },
    {
        "id": "9e344bb29a3015bd",
        "type": "function",
        "z": "1549c8010dfcd079",
        "name": "ConnectMQTT",
        "func": "msg.action = \"connect\";\n\nconst CID = flow.get('mqtt-cid');\nconst USERNAME = flow.get('mqtt-uname');\n\nconst setting = {\n    \n    // Basic host setting\n    \"broker\": flow.get('mqtt-broker'),\n    \"port\": flow.get('mqtt-port'),\n    \"clientid\": CID,\n    \n    // Boolean setting\n    \"force\": true,\n    \n    // Birth setting\n    \"birthTopic\": `users/${USERNAME}/${CID}/conn`,\n    \"birthQos\": \"1\",\n    \"birthRetain\": \"true\",\n    \"birthPayload\": `Device connected`,\n    \n    // Close setting\n    \"closeTopic\": `users/${USERNAME}/${CID}/disconn`,\n    \"closeQos\": \"1\",\n    \"closeRetain\": \"true\",\n    \"closePayload\": `Device disconnected`,\n\n    // Will setting\n    \"willTopic\": `users/${USERNAME}/${CID}/error`,\n    \"willQos\": \"1\",\n    \"willRetain\": \"true\",\n    \"willPayload\": `Device disconnected unexpectedly`,\n};\n\nmsg.broker = setting;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "59ba8900f8e6cb2c",
                "9bd27b21e3bcfa15"
            ]
        ]
    },
    {
        "id": "59ba8900f8e6cb2c",
        "type": "mqtt out",
        "z": "1549c8010dfcd079",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "90fcd8de4a4abf8c",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "88f52463bfa7440d",
        "type": "function",
        "z": "1549c8010dfcd079",
        "name": "SaveCid",
        "func": "msg.settings['mqtt-cid'] = JSON.parse(msg.payload).uuid;\n\nfor(let prop in msg.settings) {\n    flow.set(prop, msg.settings[prop]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 60,
        "wires": [
            [
                "8c4de33649991db9"
            ]
        ]
    },
    {
        "id": "8c4de33649991db9",
        "type": "debug",
        "z": "1549c8010dfcd079",
        "name": "ShowSettings",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "settings",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 60,
        "wires": []
    },
    {
        "id": "f85036e9a20687e5",
        "type": "complete",
        "z": "1549c8010dfcd079",
        "name": "",
        "scope": [
            "8c4de33649991db9"
        ],
        "uncaught": false,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "9e344bb29a3015bd"
            ]
        ]
    },
    {
        "id": "04a4117bab063133",
        "type": "function",
        "z": "1549c8010dfcd079",
        "name": "SaveSettings",
        "func": "const settings = {\n    'mqtt-broker':  'petificationblue.ddns.net',\n    'mqtt-port':    '8883',\n    'mqtt-uname':   'petification',\n    'http-host':    'petificationblue.ddns.net',\n    'http-port':    '1880',\n    'device-name':  'test-device',\n    'device-type':  3,\n}\n\nmsg.method = \"POST\";\nmsg.url = `https://${settings['http-host']}:${settings['http-port']}/device/${settings['device-name']}/${settings['device-type']}`;\nmsg.settings = settings;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 60,
        "wires": [
            [
                "9056e8f911ae5bf5"
            ]
        ]
    }
]